From 4edc95fbd09be29425133ee7a815776c1a72baea Mon Sep 17 00:00:00 2001
From: Alyssa Rosenzweig <alyssa@rosenzweig.io>
Date: Wed, 20 Feb 2019 05:15:03 +0000
Subject: [PATCH 13/19] nondrm: Integrate pantrace

Signed-off-by: Alyssa Rosenzweig <alyssa@rosenzweig.io>
---
 pan_nondrm.c | 15 +++++++++++++++
 1 file changed, 15 insertions(+)

diff --git a/src/gallium/drivers/panfrost/nondrm/pan_nondrm.c b/src/gallium/drivers/panfrost/nondrm/pan_nondrm.c
index 0c6efea..959de81 100644
--- a/src/gallium/drivers/panfrost/nondrm/pan_nondrm.c
+++ b/src/gallium/drivers/panfrost/nondrm/pan_nondrm.c
@@ -41,6 +41,7 @@
 #include "pan_resource.h"
 #include "pan_context.h"
 #include "pan_swizzle.h"
+#include "pan_trace.h"
 
 /* From the kernel module */
 
@@ -201,6 +202,9 @@ panfrost_nondrm_submit_vs_fs_job(struct panfrost_context *ctx, bool has_draws, b
 
         mali_ptr addr = (mali_ptr) (uintptr_t) (atoms + (has_draws ? 0 : 1));
         unsigned nr_atoms = has_draws ? 2 : 1;
+        
+        /* Dump memory _before_ submitting so we're not corrupted with actual GPU results */
+        pantrace_dump_memory();
 
         struct kbase_ioctl_job_submit submit = {
                 .addr = addr,
@@ -211,6 +215,13 @@ panfrost_nondrm_submit_vs_fs_job(struct panfrost_context *ctx, bool has_draws, b
         if (pandev_ioctl(nondrm->fd, KBASE_IOCTL_JOB_SUBMIT, &submit))
                 printf("Error submitting\n");
 
+        /* Trace the job if we're doing that and do a memory dump. We may
+         * want to adjust this logic once we're ready to trace FBOs */
+
+        for (unsigned i = (has_draws ? 0 : 1); i < 2; ++i) {
+                pantrace_submit_job(atoms[i].jc, atoms[i].core_req, FALSE);
+        }
+
         /* Return fragment ID */
         return atoms[1].atom_number;
 }
@@ -301,6 +312,10 @@ panfrost_nondrm_allocate_slab(struct panfrost_screen *screen,
         }
 
         mem->stack_bottom = 0;
+
+        /* Record the mmap if we're tracing */
+        if (!(extra_flags & PAN_ALLOCATE_GROWABLE))
+                pantrace_mmap(mem->gpu, mem->cpu, mem->size, NULL);
 }
 
 
-- 
2.17.1

