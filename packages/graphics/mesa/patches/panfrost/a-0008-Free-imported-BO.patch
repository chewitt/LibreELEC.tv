From cd7f4a44e1b7a4734b0b13fe27a6def7e1ff7685 Mon Sep 17 00:00:00 2001
From: Alyssa Rosenzweig <alyssa@rosenzweig.io>
Date: Fri, 15 Feb 2019 00:16:25 +0000
Subject: [PATCH 08/19] Free imported BO

---
 pan_nondrm.c | 35 ++++++++++++++++++++++++++++++++++-
 1 file changed, 34 insertions(+), 1 deletion(-)

diff --git a/src/gallium/drivers/panfrost/nondrm/pan_nondrm.c b/src/gallium/drivers/panfrost/nondrm/pan_nondrm.c
index 04c2059..b078d51 100644
--- a/src/gallium/drivers/panfrost/nondrm/pan_nondrm.c
+++ b/src/gallium/drivers/panfrost/nondrm/pan_nondrm.c
@@ -125,6 +125,9 @@ panfrost_nondrm_import_bo(struct panfrost_screen *screen, struct winsys_handle *
         };
         ret = pandev_ioctl(nondrm->fd, KBASE_IOCTL_STICKY_RESOURCE_MAP, &map);
         assert(ret == 0);
+
+        bo->imported = true;
+        bo->imported_size = framebuffer_import.out.va_pages * 4096;
         
         return bo;
 }
@@ -300,7 +303,7 @@ panfrost_nondrm_allocate_slab(struct panfrost_screen *screen,
 static void
 panfrost_nondrm_free_slab(struct panfrost_screen *screen, struct panfrost_memory *mem)
 {
-        /* For SAME_VA, we simply munmap */
+        /* For SAME_VA, we simply munmap the GPU */
 
         if (munmap((void *) (uintptr_t) mem->gpu, mem->size)) {
                 perror("munmap");
@@ -308,6 +311,35 @@ panfrost_nondrm_free_slab(struct panfrost_screen *screen, struct panfrost_memory
         }
 }
 
+static void
+panfrost_nondrm_free_imported_bo(struct panfrost_screen *screen, struct panfrost_bo *bo) 
+{
+	struct panfrost_nondrm *nondrm = (struct panfrost_nondrm *) screen->driver;
+
+        assert(bo->imported);
+
+        u64 addresses[1];
+        addresses[0] = bo->gpu[0];
+        struct kbase_ioctl_sticky_resource_map map = {
+                .count = 1,
+                .address = (u64) (uintptr_t) addresses,
+        };
+        int ret = pandev_ioctl(nondrm->fd, KBASE_IOCTL_STICKY_RESOURCE_UNMAP, &map);
+        assert(ret == 0);
+        
+        /* ..we also munmap both the Mali and DRM side bits */
+
+        if (munmap((void *) (uintptr_t) bo->gpu[0], bo->imported_size)) {
+                perror("munmap");
+                abort();
+        }
+
+        if (munmap((void *) (uintptr_t) bo->cpu[0], bo->imported_size)) {
+                perror("munmap");
+                abort();
+        }
+}
+
 static void
 panfrost_nondrm_enable_counters(struct panfrost_screen *screen)
 {
@@ -343,6 +375,7 @@ panfrost_create_nondrm_driver(int fd)
 	driver->base.force_flush_fragment = panfrost_nondrm_force_flush_fragment;
 	driver->base.allocate_slab = panfrost_nondrm_allocate_slab;
 	driver->base.free_slab = panfrost_nondrm_free_slab;
+	driver->base.free_imported_bo = panfrost_nondrm_free_imported_bo;
 	driver->base.enable_counters = panfrost_nondrm_enable_counters;
 
         ret = ioctl(fd, KBASE_IOCTL_VERSION_CHECK, &version);
-- 
2.17.1

