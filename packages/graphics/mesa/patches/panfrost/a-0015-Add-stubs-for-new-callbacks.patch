From a56287cba106df29a31df6a5bb246437f2604cd6 Mon Sep 17 00:00:00 2001
From: Tomeu Vizoso <tomeu.vizoso@collabora.com>
Date: Mon, 4 Mar 2019 15:23:12 +0100
Subject: [PATCH 15/19] Add stubs for new callbacks

Signed-off-by: Tomeu Vizoso <tomeu.vizoso@collabora.com>
---
 pan_nondrm.c | 43 ++++++++++++++++++++++++++++++++++++++++---
 1 file changed, 40 insertions(+), 3 deletions(-)

diff --git a/src/gallium/drivers/panfrost/nondrm/pan_nondrm.c b/src/gallium/drivers/panfrost/nondrm/pan_nondrm.c
index b5335e4..db3e8a8 100644
--- a/src/gallium/drivers/panfrost/nondrm/pan_nondrm.c
+++ b/src/gallium/drivers/panfrost/nondrm/pan_nondrm.c
@@ -134,6 +134,13 @@ panfrost_nondrm_import_bo(struct panfrost_screen *screen, struct winsys_handle *
         return bo;
 }
 
+static int
+panfrost_nondrm_export_bo(struct panfrost_screen *screen, int gem_handle, struct winsys_handle *whandle)
+{
+        fprintf(stderr, "Unimplemented: %s\n", __func__);
+        return FALSE;
+}
+
 /* Use to allocate atom numbers for jobs. We probably want to overhaul this in kernel space at some point. */
 uint8_t atom_counter = 0;
 
@@ -154,7 +161,7 @@ static int
 panfrost_nondrm_submit_vs_fs_job(struct panfrost_context *ctx, bool has_draws, bool is_scanout)
 {
         struct pipe_context *gallium = (struct pipe_context *) ctx;
-        struct panfrost_screen *screen = panfrost_screen(gallium->screen);
+        struct panfrost_screen *screen = pan_screen(gallium->screen);
 	struct panfrost_nondrm *nondrm = (struct panfrost_nondrm *)screen->driver;
 
         struct pipe_surface *surf = ctx->pipe_framebuffer.cbufs[0];
@@ -231,10 +238,10 @@ panfrost_nondrm_submit_vs_fs_job(struct panfrost_context *ctx, bool has_draws, b
  */
 
 static void
-panfrost_nondrm_force_flush_fragment(struct panfrost_context *ctx)
+panfrost_nondrm_force_flush_fragment(struct panfrost_context *ctx, struct pipe_fence_handle **fence)
 {
         struct pipe_context *gallium = (struct pipe_context *) ctx;
-        struct panfrost_screen *screen = panfrost_screen(gallium->screen);
+        struct panfrost_screen *screen = pan_screen(gallium->screen);
 	struct panfrost_nondrm *nondrm = (struct panfrost_nondrm *)screen->driver;
         struct base_jd_event_v2 event;
         int ret;
@@ -438,6 +445,31 @@ panfrost_nondrm_query_gpu_version(struct panfrost_screen *screen)
         return 0x0;
 }
 
+static int
+panfrost_nondrm_init_context(struct panfrost_context *ctx)
+{
+        fprintf(stderr, "Unimplemented: %s\n", __func__);
+        return 0;
+}
+
+static void
+panfrost_nondrm_fence_reference(struct pipe_screen *screen,
+                         struct pipe_fence_handle **ptr,
+                         struct pipe_fence_handle *fence)
+{
+        fprintf(stderr, "Unimplemented: %s\n", __func__);
+}
+
+static boolean
+panfrost_nondrm_fence_finish(struct pipe_screen *pscreen,
+                      struct pipe_context *ctx,
+                      struct pipe_fence_handle *fence,
+                      uint64_t timeout)
+{
+        fprintf(stderr, "Unimplemented: %s\n", __func__);
+        return TRUE;
+}
+
 struct panfrost_driver *
 panfrost_create_nondrm_driver(int fd)
 {
@@ -449,6 +481,7 @@ panfrost_create_nondrm_driver(int fd)
 	driver->fd = fd;
 
 	driver->base.import_bo = panfrost_nondrm_import_bo;
+	driver->base.export_bo = panfrost_nondrm_export_bo;
 	driver->base.submit_vs_fs_job = panfrost_nondrm_submit_vs_fs_job;
 	driver->base.force_flush_fragment = panfrost_nondrm_force_flush_fragment;
 	driver->base.allocate_slab = panfrost_nondrm_allocate_slab;
@@ -457,6 +490,10 @@ panfrost_create_nondrm_driver(int fd)
 	driver->base.enable_counters = panfrost_nondrm_enable_counters;
 	driver->base.dump_counters = panfrost_nondrm_dump_counters;
 	driver->base.query_gpu_version = panfrost_nondrm_query_gpu_version;
+	driver->base.init_context = panfrost_nondrm_init_context;
+	driver->base.fence_reference = panfrost_nondrm_fence_reference;
+	driver->base.fence_finish = panfrost_nondrm_fence_finish;
+	driver->base.dump_counters = panfrost_nondrm_dump_counters;
 
         ret = ioctl(fd, KBASE_IOCTL_VERSION_CHECK, &version);
         if (ret != 0) {
-- 
2.17.1

