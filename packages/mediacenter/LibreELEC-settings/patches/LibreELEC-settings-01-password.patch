From 9f78841cf9ae82bdaf70d0466a9f41022caadfbb Mon Sep 17 00:00:00 2001
From: edit4ever <edit4ever@hotmail.com>
Date: Wed, 29 Aug 2018 07:27:10 -0700
Subject: [PATCH] add SSH password change

This adds the SSH password to the services tab.  Password is openly viewed and can be changed from there.
---
 language/English/strings.po           | 32 ++++++++++++++
 src/resources/lib/modules/services.py | 63 +++++++++++++++++++++++++--
 2 files changed, 92 insertions(+), 3 deletions(-)

diff --git a/language/English/strings.po b/language/English/strings.po
index 97a59b1..a4f78af 100644
--- a/language/English/strings.po
+++ b/language/English/strings.po
@@ -200,6 +200,10 @@ msgctxt "#745"
 msgid "Set to ON to enable the cron daemon"
 msgstr ""
 
+msgctxt "#746"
+msgid "Set the password for SSH root"
+msgstr ""
+
 msgctxt "#750"
 msgid "750"
 msgstr ""
@@ -572,6 +576,10 @@ msgctxt "#32208"
 msgid "Hidden Wlan"
 msgstr ""
 
+msgctxt "#32209"
+msgid "SSH Password"
+msgstr ""
+
 msgctxt "#32212"
 msgid "Cancel"
 msgstr ""
@@ -592,6 +600,30 @@ msgctxt "#32218"
 msgid "Maximum supported protocol"
 msgstr ""
 
+msgctxt "#32220"
+msgid "Bad password!"
+msgstr ""
+
+msgctxt "#32221"
+msgid "The entered password is too weak.[CR]SSH root password is unchanged."
+msgstr ""
+
+msgctxt "#32222"
+msgid "Password changed!"
+msgstr ""
+
+msgctxt "#32223"
+msgid "The SSH password for root has been successfully changed by root."
+msgstr ""
+
+msgctxt "#32224"
+msgid "Unknown error!"
+msgstr ""
+
+msgctxt "#32225"
+msgid "There was an error during the process.[CR]SSH root password is unchanged."
+msgstr ""
+
 msgctxt "#32300"
 msgid "Welcome to @DISTRONAME@"
 msgstr ""
diff --git a/src/resources/lib/modules/services.py b/src/resources/lib/modules/services.py
index 8ecfad9..719911b 100644
--- a/src/resources/lib/modules/services.py
+++ b/src/resources/lib/modules/services.py
@@ -27,7 +27,14 @@
 
 import os
 import glob
+import subprocess
+import xbmc
+import xbmcgui
+import xbmcaddon
 
+__scriptid__ = 'service.libreelec.settings'
+__addon__ = xbmcaddon.Addon(id=__scriptid__)
+_ = __addon__.getLocalizedString
 
 class services:
 
@@ -45,6 +52,7 @@ class services:
     SSH_DAEMON = None
     D_SSH_DISABLE_PW_AUTH = None
     OPT_SSH_NOPASSWD = None
+    SSH_PASSWORD = None
     AVAHI_DAEMON = None
     CRON_DAEMON = None
     menu = {'4': {
@@ -180,8 +188,20 @@ def __init__(self, oeMain):
                             'type': 'bool',
                             'InfoText': 742,
                             },
-                        'ssh_secure': {
+                        'ssh_passwd': {
                             'order': 2,
+                            'name': 32209,
+                            'value': "libreelec",
+                            'action': 'do_sshpasswd',
+                            'type': 'text',
+                            'parent': {
+                                'entry': 'ssh_autostart',
+                                'value': ['1'],
+                                },
+                            'InfoText': 746,
+                            },
+                        'ssh_secure': {
+                            'order': 3,
                             'name': 32203,
                             'value': None,
                             'action': 'initialize_ssh',
@@ -341,7 +361,10 @@ def load_values(self):
                 self.struct['ssh']['settings']['ssh_autostart']['value'] = self.oe.get_service_state('sshd')
                 self.struct['ssh']['settings']['ssh_secure']['value'] = self.oe.get_service_option('sshd', 'SSHD_DISABLE_PW_AUTH',
                         self.D_SSH_DISABLE_PW_AUTH).replace('true', '1').replace('false', '0').replace('"', '')
-
+                if self.oe.read_setting('services', 'sshpasswd') != None:
+                    self.struct['ssh']['settings']['ssh_passwd']['value'] = self.oe.read_setting('services', 'sshpasswd')
+                else:
+                    self.struct['ssh']['settings']['ssh_passwd']['value'] = 'libreelec'
                 # hide ssh settings if Kernel Parameter isset
 
                 cmd_file = open(self.KERNEL_CMD, 'r')
@@ -441,6 +464,7 @@ def initialize_ssh(self, **kwargs):
                     val = 'false'
                     options['SSH_ARGS'] = '""'
                 options['SSHD_DISABLE_PW_AUTH'] = '"%s"' % val
+                options['SSH_PASSWORD'] = '"%s"' % self.struct['ssh']['settings']['ssh_passwd']['value']
             else:
                 state = 0
             self.oe.set_service('sshd', options, state)
@@ -605,4 +629,37 @@ def wizard_set_samba(self):
         except Exception, e:
             self.oe.dbg_log('services::wizard_set_samba', 'ERROR: (%s)' % repr(e))
 
-
+    def do_sshpasswd(self, **kwargs):
+        try:
+            self.oe.dbg_log('system::do_sshpasswd', 'enter_function', 0)
+            xbmcDialog = xbmcgui.Dialog()
+            if 'listItem' in kwargs:
+                self.set_value(kwargs['listItem'])
+            state = 1
+            options = {}
+            if self.struct['ssh']['settings']['ssh_autostart']['value'] == '1':
+                options['SSH_PASSWORD'] = '"%s"' % self.struct['ssh']['settings']['ssh_passwd']['value']
+            else:
+                state = 0
+            newpwd = self.struct['ssh']['settings']['ssh_passwd']['value']
+            ssh = subprocess.Popen(["passwd"], shell=False, stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
+            readout1 = ssh.stdout.readline()
+            ssh.stdin.write(newpwd + '\n')
+            ssh.stdin.flush()
+            readout2 = ssh.stdout.readline()
+            ssh.stdin.write(newpwd + '\n')
+            readout3 = ssh.stdout.readline()
+            if "Bad password" in readout3:
+                xbmcDialog.ok(_(32220), _(32221))
+                self.struct['ssh']['settings']['ssh_passwd']['value'] = self.oe.read_setting('services', 'sshpasswd')
+                self.oe.dbg_log('system::do_sshpasswd', 'exit_function password too weak', 0)
+                return
+            elif "Retype password" in readout3:
+                self.oe.write_setting('services', 'sshpasswd', newpwd)
+                self.oe.set_service('sshd', options, state)
+                xbmcDialog.ok(_(32222), _(32223))
+            else:
+                xbmcDialog.ok(_(32224), _(32225))
+            self.oe.dbg_log('system::do_sshpasswd', 'exit_function', 0)
+        except Exception, e:
+            self.oe.dbg_log('system::do_sshpasswd', 'ERROR: (' + repr(e) + ')')
